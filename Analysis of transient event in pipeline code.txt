import numpy as np
import matplotlib.pyplot as plt

# Parameters
QP = # flow rate at point P (cubic meter per seconds)
HP = #  pressure head at point P
f = 0.009  # friction coefficient
g = 9.81 # acceleration due to gravity (meter/seconds^2)
D = 0.3  # Diameter of the pipeline (meter)
A = np.pi * (D/2)**2  # Cross-sectional area of the pipeline (meter^2)
a= 1400.0  # Wave speed (meter/seconds)
dt = 1  # Time step (seconds)
T_total = 50 # Total simulation time (seconds)
nt = int(T_total / dt)  # Number of time steps
CA =  (g*A) /a

# Initial and final boundary conditions
HA=80.0 # Initial reservoir head at upstream
HB=60.0 #  reservoir head at downstream
QA=0.4 # flow rate at upstream (cubic meter per seconds)
QB= 0.4 # flow rate at downstream (cubic meter per seconds)

R = f / (2*D*A)

Q1 = (QB + QA) / 2
H1 =CA (HA - HB)/2

R1 = R / 2

QA2= QA**2
QB2= QB**2
Q2 = QA2 - QB2

HQ = H1 - Q1
R2 = R1 * Q2

# Arrays to store results
P = np.zeros(nt)
Q = np.zeros(nt)
t_vals = np.linspace(0.0, T_total, nt)

# Boundary conditions (opening/closing of valve at t=0)
def valve_open(t):
    if t < 1.0:
        return 1.0
    else:
        return 0.5

for n in range(1, nt):
    HP = HQ - (R2 * dt)
    HPHA = HP - HA

    P[n] = HP
    Q[n] = QA - (G * HPHA) - (R *QB2* dt)

# Plotting results
plt.figure(figsize=(10, 6))
plt.plot(t_vals, P, label='Pressure head (Hp)')
plt.plot(t_vals, Q, label='(Qa))')
plt.xlabel('Time step dt')
plt.ylabel('Pressure head Hp')
plt.title('Transient Analysis of Pipeline')
plt.legend()
plt.grid(True)
plt.show()
